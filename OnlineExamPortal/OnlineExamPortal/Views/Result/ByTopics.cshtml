@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pie Charts by Topic</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <style>
        .chart-container {
            background-color: #f8f9fa; /* Set your desired background color */
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .chart-card {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row bg-dark text-light p-3">
            <div class="col">
                <h1 class="text-center">Pie Charts by Topic</h1>
            </div>
        </div>

        <div class="modal fade" id="questionsModal" tabindex="-1" aria-labelledby="questionsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="questionsModalLabel">Questions List</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                    </div>
                </div>
            </div>
        </div>

        @* <div class="container mt-3 chart-container">
        <div class="row">
        <div class="col">
        <div id="questions-placeholder"></div>
        </div>
        </div>
        </div> *@

        @if (ViewBag.ChartDataByTopic.Count > 0)
        {
            <div class="container mt-3">
                <div class="row">
                    @foreach (var item in ViewBag.ChartDataByTopic)
                    {
                        <div class="col-md-6 chart-card">
                            <div class="card">
                                <div class="card-header bg-primary text-white">
                                    <h5 class="card-title text-center">@item.Key - Topic - @ViewData[@item.Key.ToString()]</h5>
                                </div>
                                <div class="card-body">
                                    <canvas id="chart-@item.Key" class="rounded shadow chart-canvas"></canvas>
                                    <script>
                                        // Define updateQuestionsUI in the global scope
                                        function updateQuestionsUI(questions) {
                                            var modalBody = $('#questionsModal').find('.modal-body');
                                            modalBody.empty();

                                            $('#questions-placeholder').empty();

                                            questions.forEach(function (question) {
                                                var bgColor = question.result === 1 ? 'bg-success' : 'bg-danger';
                                                function getOptionValue(selectedOption) {
                                                    var selectedOptionNumber = selectedOption.replace("Option", "");
                                                    var selectedOptionKey = "option" + selectedOptionNumber;
                                                    return question[selectedOptionKey];
                                                }

                                                function changeOptionsignature(x) {
                                                    if (x === "a") {
                                                        return "Option1";
                                                    } else if (x === "b") {
                                                        return "Option2";
                                                    } else if (x === "c") {
                                                        return "Option3";
                                                    } else if (x === "d") {
                                                        return "Option4";
                                                    } else if (x === "e") {
                                                        return "Option5";
                                                    } else {
                                                        return x;
                                                    }

                                                }
                                                var selectedOption = question.selectedOption.toLowerCase();
                                                var correctOption = question.correctOption.toLowerCase();

                                                var correctOptionValue = changeOptionsignature(correctOption);
                                                var selectedOptionValue = changeOptionsignature(selectedOption);

                                                correctOptionValue = getOptionValue(correctOptionValue);
                                                selectedOptionValue = getOptionValue(selectedOptionValue);

                                                var questionHtml = `
                                        <div class="card mb-3 ${bgColor}">
                                        <div class="card-body">
                                        <h5 class="card-title">${question.questionText}</h5>
                                        <p class="card-text">Correct Option: ${correctOptionValue}</p>
                                        <p class="card-text">Selected Option: ${selectedOptionValue}</p>
                                        </div>
                                        </div>
                                                                                                                                                        `;

                                                $('#questions-placeholder').append(questionHtml);
                                                modalBody.append(questionHtml);

                                            });
                                        }

                                        var ctx = document.getElementById('chart-@item.Key').getContext('2d');
                                        (function () {
                                            var tid = @item.Key;

                                            function handlePieChartClick(label) {
                                                $.ajax({
                                                    type: 'GET',
                                                    url: '/Result/ShowQuestions',
                                                    data: { UserId: @ViewBag.UserID, TopicID: tid, Type: "all" },
                                                    success: function (questions) {
                                                        updateQuestionsUI(questions);
                                                        $('#questionsModal').modal('show');
                                                    },
                                                    error: function (error) {
                                                        console.error(error);
                                                    }
                                                });
                                            }

                                            try {
                                                var labels = @Html.Raw(item.Value.Labels);
                                                var data = @Html.Raw(item.Value.Data);
                                                var colors = @Html.Raw(item.Value.Colors);

                                                new Chart(ctx, {
                                                    type: 'pie',
                                                    data: {
                                                        labels: labels,
                                                        datasets: [{
                                                            data: data,
                                                            backgroundColor: colors
                                                        }]
                                                    },
                                                    options: {
                                                        onClick: function (event, chartElements) {
                                                            if (chartElements && chartElements.length > 0) {
                                                                var label = labels[chartElements[0].index];
                                                                handlePieChartClick(label);
                                                            }
                                                        }
                                                    }
                                                });
                                            } catch (error) {
                                                console.error(error);
                                            }
                                        })();
                                    </script>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <p class="text-center">No data available.</p>
        }
    </div>
</body>
</html>